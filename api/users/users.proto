syntax = "proto3";

option go_package = "github.com/lawrencesparq/common/api/users";

package api;

message RegistrationRequest {
    string first_name = 1;
    string last_name = 2;
    string email = 3;
    string phone_number = 4;
    string province = 5;
    string city = 6;
    string address = 7;
    string password = 8;
    bool IsTnCsChecked = 9;
}

message RegistrationResponse {
    string status = 1;
    string message = 2;
}

message LogInRequest {
    string email = 1;
    string password = 2;
    string ID = 3;
    string otp = 4;
}

message UserDetails {
    string ID = 1;
    string first_name = 2;
    string last_name = 3;
    string email = 4;
    string province = 5;
    string city = 6;
    string address = 7;
    string password = 8;
    bool changePassword = 9;
    bool isActive = 10;
    bool IsTnCsChecked = 11;
    int64 loginAttempts = 12;
    bool isLocked = 13;
    string otp_expiry_date = 14;
    string last_login_date = 15;
    string last_password_change = 16;
    bool sendNewsLetter = 17;
    string phone_number = 18;
}

message UserData {
    repeated UserDetails data = 1;
}

message LogInResponse {
    string status = 1;
    string message = 2;
    string token = 3;
}

service UserService {
    rpc RegisterUser (RegistrationRequest) returns (RegistrationResponse);
    rpc LogInUser (LogInRequest) returns (LogInResponse);
    rpc UserProfile (LogInRequest) returns (UserDetails);
    rpc VerifyEmail (LogInRequest) returns (LogInResponse);
    rpc VerifyOTP (LogInRequest) returns (LogInResponse);
    rpc ResetUserPassword (LogInRequest) returns (LogInResponse);
    rpc CloseAccount (LogInRequest) returns (LogInResponse);
    rpc ActivateAccount (LogInRequest) returns (LogInResponse);
    rpc EditUserDetails (RegistrationRequest) returns (RegistrationResponse);
    rpc BackOfficeUsers (LogInRequest) returns (UserData);
}